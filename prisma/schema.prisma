// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider      = "postgresql"
  url           = env("DATABASE_URL")
  directUrl     = env("DIRECT_URL")
}

model Appointment {
  id  String  @id @default(uuid())
  name String
  email String
  phoneNumber String
  date String
  time String
  serviceId Int
  service Service @relation(fields: [serviceId], references: [id])
  addtlDetails String
  location String
  discovery String
  isInstructionsAcknowledged Boolean
  instagram String
  status String @default("Pending")
  completedOn String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id Int @id @default(autoincrement())
  name String @unique
  price Int
  isSale Boolean @default(false)
  salePrice Int @default(0)
  duration String
  description String
  svgData Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Appointment Appointment[]
  Review Review[]
}

model Review {
  id String @id @default(uuid())
  serviceId Int
  service Service @relation(fields: [serviceId], references: [id])
  rating String
  reviewer String
  email String
  comment String
  wouldRecommend Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GalleryPhoto {
  id String @id @default(uuid())
  isShown Boolean
  category String
  url String
  alt String
  isFeatured Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WeeklyAvailability {
  day String @id
  isAvailable Boolean
  from String
  to String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SpecificUnavailability {
  id String @id @default(uuid())
  dateFrom String
  dateTo String
  timeFrom String
  timeTo String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
